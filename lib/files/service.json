{
    "id": "rw_embed_v1",
    "name": "RW Embed v1",
    "urls": [
      {
        "url": "/embeds",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3015",
            "path": "/embeds"
        }]
      },
      {
        "url": "/embeds/:id",
        "method": "GET",
        "endpoints": [{
            "method": "GET",
            "baseUrl": "http://localhost:3015",
            "path": "/embeds/:id"
        }]
      },
      {
        "url": "/embeds",
        "method": "POST",
        "endpoints": [{
            "method": "POST",
            "baseUrl": "http://localhost:3015",
            "path": "/embeds"
        }]
      },
      {
        "url": "/embeds/:id",
        "method": "PUT",
        "endpoints": [{
            "method": "PUT",
            "baseUrl": "http://localhost:3015",
            "path": "/embeds/:id"
        }]
      },
      {
        "url": "/embeds/:id",
        "method": "DELETE",
        "endpoints": [{
            "method": "DELETE",
            "baseUrl": "http://localhost:3015",
            "path": "/embeds/:id"
        }]
      }
    ],
    "swagger": {
      "swagger": "2.0",
      "info": {
        "title": "RW Embed API",
        "description": "Resource Watch - Embed API",
        "version": "1.0.0"
      },
      "host": "ec2-52-23-163-254.compute-1.amazonaws.com",
      "schemes": [
        "http"
      ],
      "produces": [
        "application/json"
      ],
      "paths": {
        "/embeds/{id}": {
          "get": {
            "description": "Returns embed based on a single UUID or slud, if the geostore not exist return 404",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Embed"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "UUID of embed to fetch or slug",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Embed obtained",
                "schema": {
                  "$ref": "#/definitions/Embed"
                }
              },
              "404": {
                "description": "Embed not found",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "put": {
            "description": "Update embed based on a single UUID or slug, if the geostore not exist return 404",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Embed"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "UUID of embed to update or slug",
                "required": true,
                "type": "string"
              },
              {
                "name": "embed",
                "in": "body",
                "description": "New data of the embed",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/EmbedCreate"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Embed updated",
                "schema": {
                  "$ref": "#/definitions/Embed"
                }
              },
              "404": {
                "description": "Embed not found",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "delete": {
            "description": "Delete embed based on a single UUID or slug, if the geostore not exist return 404",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Embed"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "UUID of embed to delete or slug",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Embed updated",
                "schema": {
                  "$ref": "#/definitions/Message"
                }
              },
              "404": {
                "description": "Embed not found",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        },
        "/embeds": {
          "get": {
            "description": "Returns all embeds",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Embed"
            ],
            "responses": {
              "200": {
                "description": "Embeds obtained",
                "schema": {
                  "$ref": "#/definitions/Embeds"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "post": {
            "summary": "Create application or image embed (depends on source_type - 0 for application or 1 for image)",
            "description": "Create embed",
            "produces": [
              "application/json"
            ],
            "tags": [
              "Embed"
            ],
            "parameters": [
              {
                "name": "embed",
                "in": "body",
                "description": "Embed to save",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/EmbedCreate"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "The object created",
                "schema": {
                  "$ref": "#/definitions/Embed"
                }
              },
              "400": {
                "description": "Validate error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "Unexpected error",
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "definitions": {
        "EmbedCreate": {
          "type": "object",
          "properties": {
            "embed": {
              "type": "object",
              "properties": {
                "source_url": {
                  "type": "string",
                  "description": "Source url"
                },
                "embed_attributes": {
                  "type": "object",
                  "description": "Attributes of embed",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of the embed"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Id of the status (0 - panding, 1 - saved, 2 - failed, 3 - deleted)"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug (would be generated from title if empty)"
                    },
                    "summary": {
                      "type": "string",
                      "description": "Summary (short description)"
                    },
                    "content": {
                      "type": "string",
                      "description": "Long description"
                    },
                    "source_type": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Id of the source type (0 - application, 1 - image)"
                    }
                  }
                }
              }
            }
          }
        },
        "Embeds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmbedArray"
          }
        },
        "EmbedArray": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Embed id"
            },
            "slug": {
              "type": "string",
              "description": "Slug of the embed"
            },
            "title": {
              "type": "string",
              "description": "Title of the embed"
            },
            "source_type": {
              "type": "string",
              "description": "Source type (application or image)"
            },
            "status": {
              "type": "string",
              "description": "status"
            }
          }
        },
        "Embed": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "description": "Embed id"
            },
            "slug": {
              "type": "string",
              "description": "Slug of the embed"
            },
            "source_type": {
              "type": "string",
              "description": "Source type (application, image)"
            },
            "source_url": {
              "type": "string",
              "description": "Embed url"
            },
            "title": {
              "type": "string",
              "description": "Title of the embed"
            },
            "summary": {
              "type": "string",
              "description": "Short description"
            },
            "content": {
              "type": "string",
              "description": "Long description"
            },
            "meta": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Date"
                },
                "created_at": {
                  "type": "string",
                  "description": "Date"
                }
              }
            }
          }
        },
        "Message": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The HTTP status code applicable to this problem, expressed as a string value"
            },
            "error": {
              "type": "string",
              "description": "An application-specific error code, expressed as a string value"
            },
            "exception": {
              "type": "string",
              "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
            },
            "traces": {
              "type": "string",
              "description": "A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized"
            }
          }
        }
      }
    }
}
